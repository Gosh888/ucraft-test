version: "3.7"
services:

  backend:
    container_name: backend
    image: backend:latest
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    expose:
      - ${PORT}
    ports:
      - ${PORT}:${PORT}
    env_file: .env
    depends_on:
      - ucraft-postgres
      - ucraft-redis
    networks:
      - local-net

  ucraft-postgres:
    image: postgres:14.1-alpine
    container_name: ucraft_postgres_container
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - ALLOW_IP_RANGE=0.0.0.0/0
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
    - ./ucraft-postgres-data:/var/lib/postgresql
    networks:
      - local-net

  ucraft-redis:
    image: redis:6.2-alpine
    container_name: ucraft_redis_container
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - ./ucraft-redis-data:/data
    user: redis
    networks:
      - local-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: ucraft_pg-admin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "8080:80"
    networks:
      - local-net

networks:
  local-net:
volumes:
  ucraft-postgres-data:
  ucraft-redis-data:
